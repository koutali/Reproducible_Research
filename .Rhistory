install.packages("RMySQL")
install.packages("knitr")
install.packages("knitr")
install.packages(c("KernSmooth", "MASS", "Matrix", "R6", "RCurl", "XML", "boot", "chron", "class", "codetools", "crayon", "foreign", "gridExtra", "httr", "lattice", "manipulate", "nlme", "nnet", "rpart", "spatial", "stringi", "survival"))
setwd("~/Documents/workspace/R/Reproducible Research/assessment 1")
install.packages("timeDate")
data <- read.csv('activity.csv')
data_grouped_by_date <- subset(data, !is.na(data$steps)) %>%
group_by(date) %>%
summarise(sum_steps = sum(steps),
mean_step_count = mean(steps),
median_step_count = median(steps)) %>%
arrange(date)
library(plyr)
library(dplyr)
data_grouped_by_date <- subset(data, !is.na(data$steps)) %>%
group_by(date) %>%
summarise(sum_steps = sum(steps),
mean_step_count = mean(steps),
median_step_count = median(steps)) %>%
arrange(date)
library(ggplot2)
impute.mean <- function(x) {
replace(x, is.na(x), mean(x, na.rm = TRUE))
}
# Solution inspired from http://stackoverflow.com/questions/9322773/how-to-replace-na-with-mean-by-subset-in-r-impute-with-plyr
modified_data <- ddply(data, ~interval, transform, steps = impute.mean(steps))
modified_data <- arrange(modified_data, date)
modified_data_grouped_by_date <- modified_data %>%
group_by(date) %>%
summarise(sum_steps = sum(steps),
mean_step_count = mean(steps),
median_step_count = median(steps)) %>%
arrange(date)
# Print the data frame
modified_data_grouped_by_date
ggplot(aes(x = sum_steps), data = modified_data_grouped_by_date) +
xlab('Number of steps') +
ylab('Count') +
ggtitle('Number of taken steps per day in the modified data') +
geom_histogram(colour = "darkgreen", fill = "white")
library(timeDate)
View(modified_data)
isWeekday('2015-07-17')
isWeekday('2015-07-18')
x <- modified_data
x$weekday <- isWeekday(modified_data$date)
View(x)
tail(x)
x <- modified_data_grouped_by_date
x$weekday <- isWeekday(modified_data_grouped_by_date$date)
modified_data_grouped_by_date$weekday <- isWeekday(modified_data_grouped_by_date$date)
View(modified_data_grouped_by_date)
plot
?plot
View(data_grouped_by_date)
plot(mean_step_count ~ date, data_grouped_by_date, xaxt = "n", type = "l")
plot(mean_step_count ~ date, data_grouped_by_date, type = "l")
plot(mean_step_count ~ date, data_grouped_by_date, type = "l")
plot(mean_step_count ~ date, data_grouped_by_date, xaxt = "n", type = "l")
axis(1, data_grouped_by_date$date, format(dm$Date, "%b %d"), cex.axis = .7)
axis(1, data_grouped_by_date$date, format(data_grouped_by_date$Date, "%b %d"), cex.axis = .7)
ggplot( data = data_grouped_by_date, aes( date, mean_step_count )) + geom_line()
plot(mean_step_count ~ date, data, xaxt = "n", type = "l")
View(modified_data)
ggplot( data = data_grouped_by_date, aes( date, mean_step_count )) + geom_line()
data_grouped_by_date <- subset(data, !is.na(data$steps)) %>%
group_by(date, interval) %>%
summarise(sum_steps = sum(steps),
mean_step_count = mean(steps),
median_step_count = median(steps)) %>%
arrange(date)
View(data_grouped_by_date)
setwd("~/Documents/workspace/R/Reproducible Research/assessment 1")
data <- read.csv('activity.csv')
library(plyr)
library(dplyr)
data_grouped_by_date <- subset(data, !is.na(data$steps)) %>%
group_by(date) %>%
summarise(sum_steps = sum(steps),
mean_step_count = mean(steps),
median_step_count = median(steps)) %>%
arrange(date)
impute.mean <- function(x) {
replace(x, is.na(x), mean(x, na.rm = TRUE))
}
# Solution inspired from http://stackoverflow.com/questions/9322773/how-to-replace-na-with-mean-by-subset-in-r-impute-with-plyr
modified_data <- ddply(data, ~interval, transform, steps = impute.mean(steps))
modified_data <- arrange(modified_data, date)
modified_data_grouped_by_date <- modified_data %>%
group_by(date) %>%
summarise(sum_steps = sum(steps),
mean_step_count = mean(steps),
median_step_count = median(steps)) %>%
arrange(date)
# Print the data frame
modified_data_grouped_by_date
View(modified_data_grouped_by_date)
View(modified_data)
View(data_grouped_by_date)
View(modified_data)
data_grouped_by_interval <- subset(data, !is.na(data$steps)) %>%
group_by(interval) %>%
summarise(sum_steps = sum(steps),
mean_step_count = mean(steps),
median_step_count = median(steps)) %>%
arrange(date)
data <- read.csv('activity.csv')
data_grouped_by_interval <- subset(data, !is.na(data$steps)) %>%
group_by(interval) %>%
summarise(sum_steps = sum(steps),
mean_step_count = mean(steps),
median_step_count = median(steps)) %>%
arrange(date)
View(data)
library(plyr)
library(dplyr)
data <- rename(data,
Steps = steps,
Date = date,
Interval = interval)
View(data)
data_grouped_by_date <- subset(data, !is.na(data$Steps)) %>%
group_by(Date) %>%
summarise(Sum.Steps = sum(Steps),
Mean.Step.Count = mean(Steps),
Median.Step.Count = median(Steps)) %>%
arrange(Date)
View(data_grouped_by_date)
library(ggplot2)
ggplot(aes(x = Sum.Steps), data = data_grouped_by_date) +
xlab('Number of steps') +
ylab('Count') +
ggtitle('Number of taken steps per day') +
geom_histogram(colour = "darkgreen", fill = "white")
data_grouped_by_interval <- subset(data, !is.na(data$Steps)) %>%
group_by(Interval) %>%
summarise(Sum.Steps = sum(Steps),
Mean.Step.count = mean(Steps),
Median.Step.Count = median(Steps)) %>%
arrange(Date)
View(data)
data_grouped_by_interval <- subset(data, !is.na(data$Steps)) %>%
group_by(Interval) %>%
summarise(Sum.Steps = sum(Steps),
Mean.Step.count = mean(Steps),
Median.Step.Count = median(Steps))
View(data_grouped_by_interval)
data <- read.csv('activity.csv')
View(data)
